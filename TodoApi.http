#HTTP
@TodoApi_HostAddress = http://localhost:5275
@jwt_token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1lIjoidGVzdHVzZXIiLCJqdGkiOiIxOGIzNTVhNS1iN2ZkLTQ5YmMtOWM1MS01ZTQ1ZWE1YTZkM2UiLCJleHAiOjE3MzkyOTY1NzIsImlzcyI6IlRvZG9BcGkiLCJhdWQiOiJUb2RvQXBpIn0.qv1dkgeAqvp7Y_Pe_O8xo5iISMxaG7XOUGVAEBfK4vE

### Register
POST {{TodoApi_HostAddress}}/api/auth/register
Content-Type: application/json

{
  "username": "testuser2",
  "passwordHash": "password123"
}

### Login
POST {{TodoApi_HostAddress}}/api/auth/login
Content-Type: application/json

{
  "username": "testuser",
  "password": "password123"
}

### Get all ToDo items (Public)
GET {{TodoApi_HostAddress}}/api/todo
Accept: application/json

### Get a specific ToDo item by ID (Public)
GET {{TodoApi_HostAddress}}/api/todo/1
Accept: application/json

### Create a new ToDo item (Auth needed)
POST {{TodoApi_HostAddress}}/api/todo
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
    "title": "Wash",
    "isCompleted": false
}

### Update an existing ToDo item (Auth needed)
### Id must be the same in url and body
PUT {{TodoApi_HostAddress}}/api/todo/1
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
    "title": "Sweep",
    "isCompleted": true
}

### Delete a ToDo item (Auth needed)
DELETE {{TodoApi_HostAddress}}/api/todo/6
Authorization: Bearer {{jwt_token}}